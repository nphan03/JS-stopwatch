{"version":3,"sources":["main.js"],"names":["time","document","getElementById","startbtn","stopbtn","resetbtn","startTime","stopTime","stopDuration","interval","printTime","millisec","sec","min","hrs","innerHTML","String","padStart","start","Date","setInterval","counter","stop","clearInterval","reset","currentTime","timeLapse","getUTCMilliseconds","getUTCSeconds","getUTCMinutes","getUTCHours","addEventListener"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAACC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAT;AACA,IAAIC,QAAQ,GAACF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAb;AACA,IAAIE,OAAO,GAACH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAZ;AACA,IAAIG,QAAQ,GAACJ,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAb;AAEA,IAAII,SAAS,GAAC,IAAd;AACA,IAAIC,QAAQ,GAAC,IAAb;AACA,IAAIC,YAAY,GAAC,CAAjB;AACA,IAAIC,QAAQ,GAAG,IAAf;;AAEA,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAUC,GAAV,EAAcC,GAAd,EAAkBC,GAAlB,EAA0B;AACxCd,EAAAA,IAAI,CAACe,SAAL,GAAeC,MAAM,CAACF,GAAD,CAAN,CAAYG,QAAZ,CAAqB,CAArB,EAAuB,GAAvB,IAA8B,GAA9B,GAAoCD,MAAM,CAACH,GAAD,CAAN,CAAYI,QAAZ,CAAqB,CAArB,EAAuB,GAAvB,CAApC,GAAkE,GAAlE,GAAwED,MAAM,CAACJ,GAAD,CAAN,CAAYK,QAAZ,CAAqB,CAArB,EAAuB,GAAvB,CAAxE,GAAsG,GAAtG,GAA4GD,MAAM,CAACL,QAAD,CAAN,CAAiBM,QAAjB,CAA0B,CAA1B,EAA4B,GAA5B,CAA3H;AACD,CAFD;;AAIA,SAASC,KAAT,GAAgB;AACd,MAAGZ,SAAS,IAAI,IAAhB,EAAqB;AAAE;AACrBA,IAAAA,SAAS,GAAG,IAAIa,IAAJ,EAAZ;AACD;;AACD,MAAGZ,QAAQ,IAAI,IAAf,EAAoB;AAClBC,IAAAA,YAAY,IAAK,IAAIW,IAAJ,KAAaZ,QAA9B;AACD;;AACDE,EAAAA,QAAQ,GAAGW,WAAW,CAACC,OAAD,EAAU,EAAV,CAAtB;AACD;;AAED,SAASC,IAAT,GAAe;AACbf,EAAAA,QAAQ,GAAG,IAAIY,IAAJ,EAAX;AACAI,EAAAA,aAAa,CAACd,QAAD,CAAb;AACD;;AACD,SAASe,KAAT,GAAgB;AACdhB,EAAAA,YAAY,GAAC,CAAb;AACAF,EAAAA,SAAS,GAAC,IAAV;AACAC,EAAAA,QAAQ,GAAC,IAAT;AACAG,EAAAA,SAAS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAT;AACAa,EAAAA,aAAa,CAACd,QAAD,CAAb;AACD;;AAED,SAASY,OAAT,GAAkB;AACd,MAAII,WAAW,GAAG,IAAIN,IAAJ,EAAlB;AACA,MAAIO,SAAS,GAAG,IAAIP,IAAJ,CAASM,WAAW,GAAGnB,SAAd,GAA0BE,YAAnC,CAAhB;AACA,MAAIG,QAAQ,GAAGe,SAAS,CAACC,kBAAV,EAAf;AAAA,MACIf,GAAG,GAAQc,SAAS,CAACE,aAAV,EADf;AAAA,MAEIf,GAAG,GAAQa,SAAS,CAACG,aAAV,EAFf;AAAA,MAGIf,GAAG,GAAQY,SAAS,CAACI,WAAV,EAHf;AAIApB,EAAAA,SAAS,CAACC,QAAD,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBC,GAArB,CAAT;AACH;;AAEDJ,SAAS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAT;AACAP,QAAQ,CAAC4B,gBAAT,CAA0B,OAA1B,EAAmC;AAAA,SAAMb,KAAK,EAAX;AAAA,CAAnC;AACAd,OAAO,CAAC2B,gBAAR,CAAyB,OAAzB,EAAkC;AAAA,SAAMT,IAAI,EAAV;AAAA,CAAlC;AACAjB,QAAQ,CAAC0B,gBAAT,CAA0B,OAA1B,EAAmC;AAAA,SAAMP,KAAK,EAAX;AAAA,CAAnC","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["/* how to get the time: use currentTime minus startTime minus stopDuration\r\n    if stop in between: get stopTime,\r\n    resume: calculate stopDuration (+=currentTime - stopTime), then start interval\r\n*/\r\n\r\nvar time=document.getElementById('time');\r\nvar startbtn=document.getElementById('start');\r\nvar stopbtn=document.getElementById('stop');\r\nvar resetbtn=document.getElementById('reset');\r\n\r\nvar startTime=null;\r\nvar stopTime=null;\r\nvar stopDuration=0;\r\nvar interval = null;\r\n\r\nvar printTime = (millisec,sec,min,hrs) => {\r\n  time.innerHTML=String(hrs).padStart(2,'0') + \":\" + String(min).padStart(2,'0') + \":\" + String(sec).padStart(2,'0') + \":\" + String(millisec).padStart(3,'0');\r\n};\r\n\r\nfunction start(){\r\n  if(startTime == null){ //check that clock is not running. NOT RUNNING: get startTime\r\n    startTime = new Date();\r\n  }\r\n  if(stopTime != null){ \r\n    stopDuration += (new Date() - stopTime);\r\n  }\r\n  interval = setInterval(counter, 10);\r\n}\r\n\r\nfunction stop(){\r\n  stopTime = new Date();\r\n  clearInterval(interval);\r\n}\r\nfunction reset(){\r\n  stopDuration=0;\r\n  startTime=null;\r\n  stopTime=null;\r\n  printTime(0,0,0,0);\r\n  clearInterval(interval);\r\n}\r\n\r\nfunction counter(){\r\n    var currentTime = new Date();\r\n    var timeLapse = new Date(currentTime - startTime - stopDuration);\r\n    var millisec = timeLapse.getUTCMilliseconds(),\r\n        sec      = timeLapse.getUTCSeconds(),\r\n        min      = timeLapse.getUTCMinutes(),\r\n        hrs      = timeLapse.getUTCHours();\r\n    printTime(millisec, sec, min, hrs);\r\n}\r\n\r\nprintTime(0,0,0,0);\r\nstartbtn.addEventListener(\"click\", () => start());\r\nstopbtn.addEventListener(\"click\", () => stop());\r\nresetbtn.addEventListener(\"click\", () => reset());"]}